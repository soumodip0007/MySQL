CREATE TABLE authors(author_id INT PRIMARY KEY AUTO_INCREMENT, author_name VARCHAR(50) NOT NULL);
CREATE TABLE books(book_id INT PRIMARY KEY AUTO_INCREMENT, title VARCHAR(50) NOT NULL, ratings INT, author_id INT, FOREIGN KEY(author_id) REFERENCES authors(author_id) ON DELETE CASCADE);
INSERT INTO authors(author_name) values ('Mario'), ('Luigi'), ('Shaun'), ('Peach');
INSERT INTO books (title, ratings, author_id) VALUES ('Play using Mario', 5, 1), ('Play using Luigi', 4, 2), ('Defeat Shaun', 5, 3);

1. Now join two tables using inner join.
2. Now write a query for displaying null.
3. Replace all null with Not Found and rating will be 0.
4. Based on the rating add a new column in books table and print remarks(5- 'Good', 4- 'Moderate', 3- 'Average', 2- 'Improve more', 'Default- Bad');

Solution--

1. SELECT author_name, title, ratings FROM authors INNER JOIN books ON books.author_id=authors.author_id;

2. SELECT author_name, title, ratings FROM authors LEFT JOIN books ON books.author_id=authors.author_id;

3. SELECT author_name, IFNULL(title, 'Not Found'), IFNULL(ratings,0) FROM authors LEFT JOIN books ON    books.author_id=authors.author_id;

4. 
SELECT author_name, ratings,
CASE 
    WHEN IFNULL(ratings, 0) >= 5 THEN 'Good' 
    WHEN IFNULL(ratings, 0) >= 4 THEN 'Moderate'
    WHEN IFNULL(ratings, 0) >= 3 THEN 'Average'
    WHEN IFNULL(ratings, 0) >= 2 THEN 'Improve more'
    ELSE 'Bad'
END AS remark
FROM authors
INNER JOIN books
on books.author_id=authors.author_id;